Create table ROOT.T_AIRPORT(
                               id NUMBER GENERATED BY DEFAULT AS IDENTITY,
                               AIRPORT_CODE varchar2(10),
                               NAME varchar2(255),
                               PRIMARY KEY (id)
);

Create table ROOT.T_AIRLINE(
                               id NUMBER GENERATED BY DEFAULT AS IDENTITY,
                               AIRLINE_CODE varchar2(10),
                               NAME varchar2(255),
                               PRIMARY KEY (id)
);

Create table ROOT.T_AIRPLANE(
                                id NUMBER GENERATED BY DEFAULT AS IDENTITY,
                                AIRPLANE_CODE varchar2(20),
                                AIRLINE_CODE varchar2(20),
                                NAME varchar2(255),
                                PRIMARY KEY (id));


Create table ROOT.T_FLIGHT(
                              id NUMBER GENERATED BY DEFAULT AS IDENTITY,
                              ARRIVAL_AIRPORT_CODE varchar2(20),
                              DEPARTURE_AIRPORT_CODE varchar2(20),
                              ARRIVAL_TIME  timestamp,
                              DEPARTURE_TIME timestamp,
                              Duration number,
                              AIRPLANE_CODE varchar2(20),
                              PRIMARY KEY (id));


INSERT INTO ROOT.T_FLIGHT ( id,AIRPLANE_CODE,ARRIVAL_AIRPORT_CODE,DEPARTURE_TIME,DEPARTURE_AIRPORT_CODE,ARRIVAL_TIME,DURATION ) VALUES   (1,'GEMINI','HEL', TO_TIMESTAMP('2022-09-01 18:30:00','YYYY-MM-DD HH24:MI:SS'),'GRU',TO_TIMESTAMP('2022-09-01 21:45:00','YYYY-MM-DD HH24:MI:SS'),195);
INSERT INTO ROOT.T_FLIGHT ( id,AIRPLANE_CODE,ARRIVAL_AIRPORT_CODE,DEPARTURE_TIME,DEPARTURE_AIRPORT_CODE,ARRIVAL_TIME,DURATION ) VALUES   (2,'GEMINI200','DXB', TO_TIMESTAMP( '2022-09-17 09:45:00','YYYY-MM-DD HH24:MI:SS'),'HEK', TO_TIMESTAMP( '2022-09-17 11:00:00','YYYY-MM-DD HH24:MI:SS'),75);
INSERT INTO ROOT.T_FLIGHT ( id,AIRPLANE_CODE,ARRIVAL_AIRPORT_CODE,DEPARTURE_TIME,DEPARTURE_AIRPORT_CODE,ARRIVAL_TIME,DURATION ) VALUES   (3,'INFLIGHT200','IND', TO_TIMESTAMP( '2022-11-14 11:00:00','YYYY-MM-DD HH24:MI:SS'),'COK', TO_TIMESTAMP( '2022-11-14 13:00:00','YYYY-MM-DD HH24:MI:SS'),120);
INSERT INTO ROOT.T_FLIGHT ( id,AIRPLANE_CODE,ARRIVAL_AIRPORT_CODE,DEPARTURE_TIME,DEPARTURE_AIRPORT_CODE,ARRIVAL_TIME,DURATION ) VALUES   (4,'BLACKOUT','GRT', TO_TIMESTAMP( '2022-12-25 00:30:00','YYYY-MM-DD HH24:MI:SS'),'INJ', TO_TIMESTAMP( '2022-12-25 06:30:00','YYYY-MM-DD HH24:MI:SS'),360);
INSERT INTO ROOT.T_FLIGHT ( id,AIRPLANE_CODE,ARRIVAL_AIRPORT_CODE,DEPARTURE_TIME,DEPARTURE_AIRPORT_CODE,ARRIVAL_TIME,DURATION ) VALUES   (5,'SKYMARKS','JAA', TO_TIMESTAMP( '2023-01-04 12:15:00','YYYY-MM-DD HH24:MI:SS'),'JAC', TO_TIMESTAMP( '2023-01-04 15:00:00','YYYY-MM-DD HH24:MI:SS'),165);


INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (1, 'Dubai International Airport', 'DXB');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (2, 'Helsinki Vantaa Airport', 'HEL');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (3, 'Guarulhos - Governador AndrÌ© Franco Montoro International Airport', 'GRU');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (4, 'Heihe Airport', 'HEK');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (5, 'Indianapolis International Airport', 'IND');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (6, 'Cochin International Airport', 'COK');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (7, 'Gujrat Airport', 'GRT');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (8, 'Injune Airport', 'INJ');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (9, 'Abu Dhabi International Airport', 'AUH');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (10, 'Jalalabad Airport', 'JAA');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES   (11, 'Jackson Hole Airport', 'JAC');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES    (12, 'Jurien Bay Airport', 'IZA');
INSERT INTO ROOT.T_AIRPORT ( id, name,AIRPORT_CODE ) VALUES    (13, 'Kon Airport', 'KCI');

INSERT INTO ROOT.T_AIRPLANE ( id,AIRLINE_CODE,AIRPLANE_CODE )VALUES(1,'AAL','GEMINI200');
INSERT INTO ROOT.T_AIRPLANE ( id,AIRLINE_CODE,AIRPLANE_CODE )VALUES(2,'ACA','GEMINI');
INSERT INTO ROOT.T_AIRPLANE ( id,AIRLINE_CODE,AIRPLANE_CODE )VALUES(3,'FDX','INFLIGHT200');
INSERT INTO ROOT.T_AIRPLANE ( id,AIRLINE_CODE,AIRPLANE_CODE )VALUES(4,'THY','BLACKOUT');
INSERT INTO ROOT.T_AIRPLANE ( id,AIRLINE_CODE,AIRPLANE_CODE )VALUES(5,'IND','SKYMARKS');

INSERT INTO ROOT.T_AIRLINE ( id, name,AIRLINE_CODE )VALUES(1,'AMERICAN AIRLINES INC.', 'AAL');
INSERT INTO ROOT.T_AIRLINE ( id, name,AIRLINE_CODE )VALUES(2,'AIR CANADA', 'ACA');
INSERT INTO ROOT.T_AIRLINE ( id, name,AIRLINE_CODE )VALUES(3,'FEDEX', 'FDX');
INSERT INTO ROOT.T_AIRLINE ( id, name,AIRLINE_CODE )VALUES(4,'TURKISH AIRLINES INC.', 'THY');
INSERT INTO ROOT.T_AIRLINE ( id, name,AIRLINE_CODE )VALUES(5,'Indianapolis International Airport', 'IND');

create or replace function GetAllAirlines
return sys_refcursor
is
r sys_refcursor;
begin
  open r for
select * from ROOT.T_AIRLINE;
return r;
end GetAllAirlines;

create or replace function GET_AIRLINE_BY_AIRLINECODE(p_airlinecode in varchar2)
return sys_refcursor
 is
 airline sys_refcursor;
begin
  open airline for
select * from ROOT.T_AIRLINE where AIRLINE_CODE = p_airlinecode;
return airline;

end GET_AIRLINE_BY_AIRLINECODE;

    create or replace function GET_AIRPLANE_BY_AIRLINECODE(p_airlinecode in varchar2)
return sys_refcursor
 is
 airplane sys_refcursor;
begin
  open airplane for
select * from ROOT.T_AIRPLANE where AIRLINE_CODE = p_airlinecode;
return airplane;

end GET_AIRPLANE_BY_AIRLINECODE;

    create or replace function GET_AIRPLANE_BY_AIRPLANECODE(p_airplanecode in varchar2)
return sys_refcursor
 is
 airplane sys_refcursor;
begin
  open airplane for
select * from ROOT.T_AIRPLANE where AIRPLANE_CODE = p_airplanecode;
return airplane;

end GET_AIRPLANE_BY_AIRPLANECODE;

    create or replace function GET_AIRPORT_BY_AIRPORT_CODE(p_airportcode in varchar2)
return sys_refcursor
 is
 airport sys_refcursor;
begin
  open airport for
select * from ROOT.T_AIRPORT where AIRPORT_CODE = p_airportcode;
return airport;

end GET_AIRPORT_BY_AIRPORT_CODE;

    create or replace function Get_All_Airlines
return sys_refcursor
is
r sys_refcursor;
begin
  open r for
select * from ROOT.T_AIRLINE;
return r;
end Get_All_Airlines;

    create or replace function GET_ALL_AIRPLANES
return sys_refcursor
is
r sys_refcursor;
begin
  open r for
select * from ROOT.T_AIRPLANE;
return r;
end GET_ALL_AIRPLANES;

    create or replace function GET_ALL_AIRPORTS
return sys_refcursor
is
r sys_refcursor;
begin
  open r for
select * from ROOT.T_AIRPORT;
return r;
end GET_ALL_AIRPORTS;

    create or replace function Get_All_Flights
return sys_refcursor
is
r sys_refcursor;
begin
  open r for
select * from ROOT.T_FLIGHT;
return r;
end Get_All_Flights;

    create or replace function GET_FLIGHT_BY_ID(p_id in varchar2)
return sys_refcursor
 is
 flight sys_refcursor;
begin
  open flight for
select * from ROOT.T_FLIGHT where ID = p_id;
return flight;

end GET_FLIGHT_BY_ID;

    create or replace function SAVE_FLIGHT( p_id number,
                                        p_arrival_airport_code varchar2,
                                        p_departure_airport_code varchar2,
                                        p_arrival_time timestamp,
                                        p_departure_time timestamp,
                                        p_duration number,
                                        p_airplane_code varchar2)
  return  varchar2
  is
  message varchar2(150) := 'Success';
x_id number := 0;
business_exception Exception;
begin
  declare
  v_arrival_count number := 0;
v_departure_count number := 0;
v_airplane_count number := 0;
Begin
    if p_id =0 then
select sequnce_flight.nextval into x_id from dual;
else
       x_id := p_id;
end if;

select count(*)
           into v_arrival_count
from ROOT.T_AIRPORT
where AIRPORT_CODE = p_arrival_airport_code;

select count(*)
           into v_departure_count
from ROOT.T_AIRPORT
where AIRPORT_CODE = p_departure_airport_code;

select count(*)
           into v_airplane_count
from ROOT.T_AIRPLANE
where AIRPLANE_CODE = p_airplane_code;

if v_arrival_count = 0 then
      message:='Arrival Airport Not Found';
raise business_exception;
end if;
if v_departure_count = 0 then
      message:='Departure Airport Not Found';
raise business_exception;
end if;
if v_airplane_count = 0 then
      message:='There is no plane with given code';
raise business_exception;
end if;
if p_arrival_airport_code = p_departure_airport_code then
      message := 'Airports cannot be same';
raise business_exception;
end if;

end;
declare
    v_daily_flight_count number := 0;
begin
select count(*) into v_daily_flight_count from ROOT.T_FLIGHT flight
where ((flight.arrival_airport_code = p_arrival_airport_code AND flight.departure_airport_code = p_departure_airport_code) or
       (flight.arrival_airport_code = p_departure_airport_code AND flight.departure_airport_code = p_arrival_airport_code)) AND
    ((to_char(flight.DEPARTURE_TIME, 'YYYY') = to_char(p_departure_time,'YYYY')) and (to_char(flight.DEPARTURE_TIME, 'MM') = to_char(p_departure_time,'MM')) and (to_char(flight.DEPARTURE_TIME, 'DD') = to_char(p_departure_time,'DD')));
if v_daily_flight_count >= 3 then
       message := 'There is daily at most 3 flights allowed for an airline between 2 destinations.';
raise business_exception;
end if;
end;
if p_id =0 then
insert into ROOT.T_FLIGHT(ID,ARRIVAL_AIRPORT_CODE, DEPARTURE_AIRPORT_CODE, ARRIVAL_TIME, DEPARTURE_TIME, DURATION, AIRPLANE_CODE)
VALUES (x_id,p_arrival_airport_code,p_departure_airport_code, p_arrival_time, p_departure_time, p_duration, p_airplane_code);
else
update ROOT.T_FLIGHT flight set
                                flight.ARRIVAL_AIRPORT_CODE = p_arrival_airport_code,
                                flight.DEPARTURE_AIRPORT_CODE = p_departure_airport_code,
                                flight.ARRIVAL_TIME = p_arrival_time,
                                flight.DEPARTURE_TIME = p_departure_time,
                                flight.DURATION = p_duration,
                                flight.AIRPLANE_CODE = p_airplane_code
where flight.ID = x_id;
end if;
commit;
message:=message||x_id;
return message;
EXCEPTION
 WHEN business_exception THEN
   return message;
END;

CREATE SEQUENCE  "ROOT"."SEQUNCE_FLIGHT"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE  GLOBAL ;